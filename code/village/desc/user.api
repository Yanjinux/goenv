syntax = "v1"


 

type User {
	Id       int64  `json:"id"`
	Mobile   string `json:"mobile"`
	Nickname string `json:"nickname"`
	Sex      int64  `json:"sex"`
	Avatar   string `json:"avatar"`
	Info     string `json:"info"`
}

type (
	RegisterReq {
		Mobile   string `json:"mobile"`
		Password string `json:"password"`
		Token string `json:"token"`
	}
	RegisterResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	LoginReq {
		Mobile   string `json:"mobile"`
		Password string `json:"password"`
	}
	LoginResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	WXMiniAuthReq {
		Code          string `json:"code"`
		IV            string `json:"iv"`
		EncryptedData string `json:"encryptedData"`
	}
	WXMiniAuthResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
		RefreshAfter int64  `json:"refreshAfter"`
	}
)

type (
	UserInfoReq {
	}
	UserInfoResp {
		UserInfo User `json:"userInfo"`
	}
)

type (
	UserSmsVerifyReq {
		Mobile string `json:"mobile"` 
	}
	UserSmsVerifyResp {
		Code uint32    `json:"code"`
		Desc string `json:"desc"`
	}
)
@server(
     group: user 
    prefix: user/v1
)
service village {
	@doc "获取短信token"
	@handler mobile
	post /user/verify/mobile (UserSmsVerifyReq) returns (UserSmsVerifyResp)
	@doc "注册"
	@handler register
	post /user/register (RegisterReq) returns (RegisterResp)
	
	@doc "登陆"
	@handler login
	post /user/login (LoginReq) returns (LoginResp)

	@doc "微信小程序授权"
	@handler wxMiniAuth
	post /user/wxMiniAuth (WXMiniAuthReq) returns (WXMiniAuthResp)
}	

@server(
	jwt: Auth
    group: user 
    prefix: user/v1
)
service village {
 
	@doc "获取用户信息"
	@handler detail
	post /user/detail (UserInfoReq) returns (UserInfoResp)
	
	 
}